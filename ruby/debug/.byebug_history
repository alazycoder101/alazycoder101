c
exit
Rails.application.reloaders.map &:class
Rails.application.reloaders.count
Rails.application.reloaders
  Rails::Application::RoutesReloader,
  ActiveSupport::FileUpdateChecker,
=> [ActiveSupport::FileUpdateChecker,
[22] Medinah(DEV)> Rails.application.reloaders.map {|c| c.class}
exit
help
next
n
exit
User.where(id: 122)
User.where(id: 1)
User.first
User.find_by_id 100
User.find_by_id 10
User.find_by_id 1
User.find 1
User.where(id: 1)
User.last
User.first
Authtoken.first
exit
continue
c
exit
req.env.keys.sort
req.env.keys
req.env
env
req
req.ip
req
req.user
req
exit-all
post.comments.recent.to_sql
post.comments.to_sql
wall.private_comments.in_order.count
wall.comments.in_order.count
Comment.private.recent.where(commentable_type: 'Post').to_sql
Comment.where(commentable_id: 1).recent.where(commentable_type: 'Post').to_sql
Comment.where(commentable_id: 1).recent.where(commentable_type: 'Post').count
Comment.where(commentable_id: 1).recent.wheree(commentable_type: 'Post').count
Comment.where(commentable_id: 1).recent.wheree(commentable_type: 'Post')count
Comment.where(commentable_id: 1).recent.count
Comment.where(commentable_id: 1).count
wall.id
wall.comments.in_order.count
wall.private_comments.in_order.count
wall.private_comments.recent.count
wall.private_comments.count
exit-all
wall.private_comments.to_sql
wall.private_comments.recent.to_sql
wall.private_comments.recent.count
wall.private_comments.count
wall.comments
exit-all
help
?
continue
wall.private_comments.recent.count
wall.private_comments.count
wall.comments
wall
exit
help
?
continue
c
binding.continue
binding.c
